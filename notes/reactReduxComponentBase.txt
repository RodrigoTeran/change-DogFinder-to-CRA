import React from "react";
import { connect } from "react-redux";

const Component = ({

}) => {

  return (
    <>
    </>
  );
};

// Clases de REDUX
const mapStateToProps = (state) => {
  return {};
};

// Acciones de REDUX
const mapDispatchToProps = (dispatch) => {
  return {};
};
export default connect(mapStateToProps, mapDispatchToProps)(Component);



updatePetProfile({
  name: petProfile.name,
  petProfileImage: petProfile.petProfileImage,
  images: petProfile.images,
  isLost: petProfile.isLost,
  race: petProfile.dogBreed,
  location: petProfile.location,
  size: petProfile.size,
  mainColor: petProfile.mainColor,
  gender: petProfile.gender,
  coordenates: petProfile.coordenates
});

updateFailureMessagesComponent({
  state: true,
  title: "Error",
  description: "No se pudo actualizar el estado de tu mascota",
});














const [count, setCount] = useState(0)

useEffect(() => {
  callback(count); // Will be called when the value of count changes
}, [count, callback]);



const handleChange = value => {
  setCount(value)
};



const increment = () => {
 setCount(currentCount => currentCount + 1)
};



const features = useMemo(() => ["feature1", "feature2"], []);

useEffect(() => {
  // Callback 
}, [features]);